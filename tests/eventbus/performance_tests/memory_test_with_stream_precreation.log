=== RUN   TestMemoryPersistenceComparison
    memory_persistence_comparison_test.go:922: 
        ====================================================================================================
    memory_persistence_comparison_test.go:923: 🎯 Kafka vs NATS JetStream 内存持久化性能对比测试
    memory_persistence_comparison_test.go:924: ====================================================================================================
    memory_persistence_comparison_test.go:946: 
        ====================================================================================================
    memory_persistence_comparison_test.go:947: 🚀 开始测试场景: Low 压力 (500 消息, 5 topics)
    memory_persistence_comparison_test.go:948: ====================================================================================================
    memory_persistence_comparison_test.go:285: 
        ================================================================================
    memory_persistence_comparison_test.go:286: 🔵 测试 Kafka - Low 压力 (500 消息, 5 topics)
    memory_persistence_comparison_test.go:287: ================================================================================
    memory_persistence_comparison_test.go:91: 🧹 清理 Kafka 测试数据 (topic prefix: test.memory.kafka)...
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic2
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic1
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic5
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic3
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic4
    memory_persistence_comparison_test.go:125: ✅ 成功删除 5 个 Kafka topics
    memory_persistence_comparison_test.go:171: 🔧 创建 Kafka Topics (3 分区)...
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic1 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic2 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic3 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic4 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic5 (3 partitions)
    memory_persistence_comparison_test.go:212: 📊 验证创建的 Topics:
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:228: ✅ 成功创建 5 个 Kafka topics
    memory_persistence_comparison_test.go:385: 📊 初始资源: Goroutines=315, Memory=4.30 MB
    memory_persistence_comparison_test.go:394: ✅ 已设置预订阅 topic 列表: [test.memory.kafka.topic1 test.memory.kafka.topic2 test.memory.kafka.topic3 test.memory.kafka.topic4 test.memory.kafka.topic5]
    memory_persistence_comparison_test.go:426: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:430: 📤 开始发送 500 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:482: ✅ 发送完成
    memory_persistence_comparison_test.go:485: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:498: ✅ 接收完成: 500/500
    memory_persistence_comparison_test.go:373: 📊 Kafka 资源清理完成: 初始 315 -> 最终 448 (泄漏 133)
    memory_persistence_comparison_test.go:519: 
        ================================================================================
    memory_persistence_comparison_test.go:520: 🟢 测试 NATS - Low 压力 (500 消息, 5 topics)
    memory_persistence_comparison_test.go:521: ================================================================================
    memory_persistence_comparison_test.go:133: 🧹 清理 NATS 测试数据 (stream prefix: TEST_MEMORY_NATS)...
    memory_persistence_comparison_test.go:156:    ✅ 已删除 stream: TEST_MEMORY_NATS
    memory_persistence_comparison_test.go:163: ✅ 成功删除 1 个 NATS streams
    memory_persistence_comparison_test.go:591: 🚀 开始 Stream 预创建优化...
    memory_persistence_comparison_test.go:598:    ✅ 步骤1: 设置配置策略为 StrategyCreateOnly
    memory_persistence_comparison_test.go:608:    ✅ 步骤2: Stream 已创建（通过发布测试消息）
    memory_persistence_comparison_test.go:613:    ✅ 步骤3: 切换到 StrategySkip 策略
    memory_persistence_comparison_test.go:616: ✅ Stream 预创建优化完成！耗时: 2.6855ms
    memory_persistence_comparison_test.go:617:    ℹ️  运行时将跳过所有 StreamInfo() RPC 调用，实现零开销发布
    memory_persistence_comparison_test.go:665: 📊 初始资源: Goroutines=265, Memory=4.15 MB
    memory_persistence_comparison_test.go:696: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:700: 📤 开始发送 500 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:752: ✅ 发送完成
    memory_persistence_comparison_test.go:755: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/500 (0.2%)
    memory_persistence_comparison_test.go:763: ⚠️  接收超时
    memory_persistence_comparison_test.go:635: 📊 NATS 资源清理完成: 初始 265 -> 最终 275 (泄漏 10)
    memory_persistence_comparison_test.go:789: 
        ====================================================================================================
    memory_persistence_comparison_test.go:790: 📊 Kafka vs NATS JetStream 内存持久化性能对比报告 - Low 压力
    memory_persistence_comparison_test.go:791: ====================================================================================================
    memory_persistence_comparison_test.go:794: 
        📋 基本信息:
    memory_persistence_comparison_test.go:795:   压力级别: Low
    memory_persistence_comparison_test.go:796:   消息总数: 500
    memory_persistence_comparison_test.go:797:   Topic 数量: 5
    memory_persistence_comparison_test.go:798:   Kafka 分区数: 3 (每个 topic)
    memory_persistence_comparison_test.go:802: 
        📊 Kafka 分区详情:
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:809: 
        📨 消息指标对比:
    memory_persistence_comparison_test.go:810:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:812:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:813:   发送消息数                | 500             | 0               | -100.0%
    memory_persistence_comparison_test.go:816:   接收消息数                | 500             | 1               | -99.8%
    memory_persistence_comparison_test.go:819:   发送错误数                | 0               | 500             | -
    memory_persistence_comparison_test.go:821:   成功率                  | 100.00         % | 0.20           % | -99.8%
    memory_persistence_comparison_test.go:826: 
        ⚡ 性能指标对比:
    memory_persistence_comparison_test.go:827:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:828:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:829:   发送吞吐量 (msg/s)        | 494.62          | 0.00            | -100.0%
    memory_persistence_comparison_test.go:832:   接收吞吐量 (msg/s)        | 494.62          | 0.02            | -100.0%
    memory_persistence_comparison_test.go:835:   平均发送延迟 (ms)          | 0.031           | 0.000           | -100.0%
    memory_persistence_comparison_test.go:838:   平均处理延迟 (ms)          | 125.151         | -6322703722019.797 | -5052047332962.1%
    memory_persistence_comparison_test.go:841:   测试时长 (s)             | 1.01            | 60.01           | -
    memory_persistence_comparison_test.go:845: 
        💾 资源占用对比:
    memory_persistence_comparison_test.go:846:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:847:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:848:   初始协程数                | 315             | 265             | -50
    memory_persistence_comparison_test.go:851:   峰值协程数                | 453             | 280             | -173
    memory_persistence_comparison_test.go:854:   最终协程数                | 448             | 275             | -173
    memory_persistence_comparison_test.go:857:   协程泄漏数                | 133             | 10              | -
    memory_persistence_comparison_test.go:859:   初始内存 (MB)            | 4.30            | 4.15            | -0.14
    memory_persistence_comparison_test.go:862:   峰值内存 (MB)            | 6.11            | 9.44            | +3.33
    memory_persistence_comparison_test.go:865:   最终内存 (MB)            | 5.27            | 6.65            | +1.38
    memory_persistence_comparison_test.go:868:   内存增量 (MB)            | 0.97            | 2.50            | -
    memory_persistence_comparison_test.go:873: 
        🔗 连接和消费者组统计:
    memory_persistence_comparison_test.go:874:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:875:   -------------------------------------------------------
    memory_persistence_comparison_test.go:876:   连接数                  | 1               | 1              
    memory_persistence_comparison_test.go:878:   消费者组个数               | 1               | 1              
    memory_persistence_comparison_test.go:882: 
        ⚙️  Worker 池统计:
    memory_persistence_comparison_test.go:883:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:884:   -------------------------------------------------------
    memory_persistence_comparison_test.go:885:   使用全局 Worker 池        | true            | true           
    memory_persistence_comparison_test.go:887:   Worker 池大小           | 256             | 256            
    memory_persistence_comparison_test.go:891: 
        🎯 性能总结:
    memory_persistence_comparison_test.go:894:   ✅ Kafka 吞吐量领先 NATS 2968241.6%
    memory_persistence_comparison_test.go:905:   ✅ NATS 延迟优于 Kafka -100.0%
    memory_persistence_comparison_test.go:910:   ✅ Kafka 内存占用少于 NATS 1.53 MB
    memory_persistence_comparison_test.go:916: ====================================================================================================
    memory_persistence_comparison_test.go:946: 
        ====================================================================================================
    memory_persistence_comparison_test.go:947: 🚀 开始测试场景: Medium 压力 (2000 消息, 5 topics)
    memory_persistence_comparison_test.go:948: ====================================================================================================
    memory_persistence_comparison_test.go:285: 
        ================================================================================
    memory_persistence_comparison_test.go:286: 🔵 测试 Kafka - Medium 压力 (2000 消息, 5 topics)
    memory_persistence_comparison_test.go:287: ================================================================================
    memory_persistence_comparison_test.go:91: 🧹 清理 Kafka 测试数据 (topic prefix: test.memory.kafka)...
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic5
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic1
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic2
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic3
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic4
    memory_persistence_comparison_test.go:125: ✅ 成功删除 5 个 Kafka topics
    memory_persistence_comparison_test.go:171: 🔧 创建 Kafka Topics (3 分区)...
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic1 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic2 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic3 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic4 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic5 (3 partitions)
    memory_persistence_comparison_test.go:212: 📊 验证创建的 Topics:
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:228: ✅ 成功创建 5 个 Kafka topics
    memory_persistence_comparison_test.go:385: 📊 初始资源: Goroutines=322, Memory=6.78 MB
    memory_persistence_comparison_test.go:394: ✅ 已设置预订阅 topic 列表: [test.memory.kafka.topic1 test.memory.kafka.topic2 test.memory.kafka.topic3 test.memory.kafka.topic4 test.memory.kafka.topic5]
    memory_persistence_comparison_test.go:426: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:430: 📤 开始发送 2000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:482: ✅ 发送完成
    memory_persistence_comparison_test.go:485: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:498: ✅ 接收完成: 2000/2000
    memory_persistence_comparison_test.go:373: 📊 Kafka 资源清理完成: 初始 322 -> 最终 455 (泄漏 133)
    memory_persistence_comparison_test.go:519: 
        ================================================================================
    memory_persistence_comparison_test.go:520: 🟢 测试 NATS - Medium 压力 (2000 消息, 5 topics)
    memory_persistence_comparison_test.go:521: ================================================================================
    memory_persistence_comparison_test.go:133: 🧹 清理 NATS 测试数据 (stream prefix: TEST_MEMORY_NATS)...
    memory_persistence_comparison_test.go:156:    ✅ 已删除 stream: TEST_MEMORY_NATS
    memory_persistence_comparison_test.go:163: ✅ 成功删除 1 个 NATS streams
    memory_persistence_comparison_test.go:591: 🚀 开始 Stream 预创建优化...
    memory_persistence_comparison_test.go:598:    ✅ 步骤1: 设置配置策略为 StrategyCreateOnly
    memory_persistence_comparison_test.go:608:    ✅ 步骤2: Stream 已创建（通过发布测试消息）
    memory_persistence_comparison_test.go:613:    ✅ 步骤3: 切换到 StrategySkip 策略
    memory_persistence_comparison_test.go:616: ✅ Stream 预创建优化完成！耗时: 2.4233ms
    memory_persistence_comparison_test.go:617:    ℹ️  运行时将跳过所有 StreamInfo() RPC 调用，实现零开销发布
    memory_persistence_comparison_test.go:665: 📊 初始资源: Goroutines=272, Memory=6.43 MB
    memory_persistence_comparison_test.go:696: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:700: 📤 开始发送 2000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:752: ✅ 发送完成
    memory_persistence_comparison_test.go:755: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/2000 (0.1%)
    memory_persistence_comparison_test.go:763: ⚠️  接收超时
    memory_persistence_comparison_test.go:635: 📊 NATS 资源清理完成: 初始 272 -> 最终 282 (泄漏 10)
    memory_persistence_comparison_test.go:789: 
        ====================================================================================================
    memory_persistence_comparison_test.go:790: 📊 Kafka vs NATS JetStream 内存持久化性能对比报告 - Medium 压力
    memory_persistence_comparison_test.go:791: ====================================================================================================
    memory_persistence_comparison_test.go:794: 
        📋 基本信息:
    memory_persistence_comparison_test.go:795:   压力级别: Medium
    memory_persistence_comparison_test.go:796:   消息总数: 2000
    memory_persistence_comparison_test.go:797:   Topic 数量: 5
    memory_persistence_comparison_test.go:798:   Kafka 分区数: 3 (每个 topic)
    memory_persistence_comparison_test.go:802: 
        📊 Kafka 分区详情:
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:809: 
        📨 消息指标对比:
    memory_persistence_comparison_test.go:810:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:812:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:813:   发送消息数                | 2000            | 0               | -100.0%
    memory_persistence_comparison_test.go:816:   接收消息数                | 2000            | 1               | -100.0%
    memory_persistence_comparison_test.go:819:   发送错误数                | 0               | 2000            | -
    memory_persistence_comparison_test.go:821:   成功率                  | 100.00         % | 0.05           % | -100.0%
    memory_persistence_comparison_test.go:826: 
        ⚡ 性能指标对比:
    memory_persistence_comparison_test.go:827:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:828:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:829:   发送吞吐量 (msg/s)        | 1925.42         | 0.00            | -100.0%
    memory_persistence_comparison_test.go:832:   接收吞吐量 (msg/s)        | 1925.42         | 0.02            | -100.0%
    memory_persistence_comparison_test.go:835:   平均发送延迟 (ms)          | 0.036           | 0.000           | -100.0%
    memory_persistence_comparison_test.go:838:   平均处理延迟 (ms)          | 269.895         | -6322703624214.025 | -2342656530442.3%
    memory_persistence_comparison_test.go:841:   测试时长 (s)             | 1.04            | 60.04           | -
    memory_persistence_comparison_test.go:845: 
        💾 资源占用对比:
    memory_persistence_comparison_test.go:846:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:847:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:848:   初始协程数                | 322             | 272             | -50
    memory_persistence_comparison_test.go:851:   峰值协程数                | 460             | 287             | -173
    memory_persistence_comparison_test.go:854:   最终协程数                | 455             | 282             | -173
    memory_persistence_comparison_test.go:857:   协程泄漏数                | 133             | 10              | -
    memory_persistence_comparison_test.go:859:   初始内存 (MB)            | 6.78            | 6.43            | -0.34
    memory_persistence_comparison_test.go:862:   峰值内存 (MB)            | 9.75            | 12.38           | +2.63
    memory_persistence_comparison_test.go:865:   最终内存 (MB)            | 7.70            | 8.92            | +1.22
    memory_persistence_comparison_test.go:868:   内存增量 (MB)            | 0.92            | 2.49            | -
    memory_persistence_comparison_test.go:873: 
        🔗 连接和消费者组统计:
    memory_persistence_comparison_test.go:874:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:875:   -------------------------------------------------------
    memory_persistence_comparison_test.go:876:   连接数                  | 1               | 1              
    memory_persistence_comparison_test.go:878:   消费者组个数               | 1               | 1              
    memory_persistence_comparison_test.go:882: 
        ⚙️  Worker 池统计:
    memory_persistence_comparison_test.go:883:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:884:   -------------------------------------------------------
    memory_persistence_comparison_test.go:885:   使用全局 Worker 池        | true            | true           
    memory_persistence_comparison_test.go:887:   Worker 池大小           | 256             | 256            
    memory_persistence_comparison_test.go:891: 
        🎯 性能总结:
    memory_persistence_comparison_test.go:894:   ✅ Kafka 吞吐量领先 NATS 11559237.2%
    memory_persistence_comparison_test.go:905:   ✅ NATS 延迟优于 Kafka -100.0%
    memory_persistence_comparison_test.go:910:   ✅ Kafka 内存占用少于 NATS 1.56 MB
    memory_persistence_comparison_test.go:916: ====================================================================================================
    memory_persistence_comparison_test.go:946: 
        ====================================================================================================
    memory_persistence_comparison_test.go:947: 🚀 开始测试场景: High 压力 (5000 消息, 5 topics)
    memory_persistence_comparison_test.go:948: ====================================================================================================
    memory_persistence_comparison_test.go:285: 
        ================================================================================
    memory_persistence_comparison_test.go:286: 🔵 测试 Kafka - High 压力 (5000 消息, 5 topics)
    memory_persistence_comparison_test.go:287: ================================================================================
    memory_persistence_comparison_test.go:91: 🧹 清理 Kafka 测试数据 (topic prefix: test.memory.kafka)...
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic4
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic5
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic3
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic2
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic1
    memory_persistence_comparison_test.go:125: ✅ 成功删除 5 个 Kafka topics
    memory_persistence_comparison_test.go:171: 🔧 创建 Kafka Topics (3 分区)...
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic1 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic2 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic3 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic4 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic5 (3 partitions)
    memory_persistence_comparison_test.go:212: 📊 验证创建的 Topics:
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:228: ✅ 成功创建 5 个 Kafka topics
    memory_persistence_comparison_test.go:385: 📊 初始资源: Goroutines=329, Memory=9.01 MB
    memory_persistence_comparison_test.go:394: ✅ 已设置预订阅 topic 列表: [test.memory.kafka.topic1 test.memory.kafka.topic2 test.memory.kafka.topic3 test.memory.kafka.topic4 test.memory.kafka.topic5]
    memory_persistence_comparison_test.go:426: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:430: 📤 开始发送 5000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:482: ✅ 发送完成
    memory_persistence_comparison_test.go:485: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:498: ✅ 接收完成: 5000/5000
    memory_persistence_comparison_test.go:373: 📊 Kafka 资源清理完成: 初始 329 -> 最终 462 (泄漏 133)
    memory_persistence_comparison_test.go:519: 
        ================================================================================
    memory_persistence_comparison_test.go:520: 🟢 测试 NATS - High 压力 (5000 消息, 5 topics)
    memory_persistence_comparison_test.go:521: ================================================================================
    memory_persistence_comparison_test.go:133: 🧹 清理 NATS 测试数据 (stream prefix: TEST_MEMORY_NATS)...
    memory_persistence_comparison_test.go:156:    ✅ 已删除 stream: TEST_MEMORY_NATS
    memory_persistence_comparison_test.go:163: ✅ 成功删除 1 个 NATS streams
    memory_persistence_comparison_test.go:591: 🚀 开始 Stream 预创建优化...
    memory_persistence_comparison_test.go:598:    ✅ 步骤1: 设置配置策略为 StrategyCreateOnly
    memory_persistence_comparison_test.go:608:    ✅ 步骤2: Stream 已创建（通过发布测试消息）
    memory_persistence_comparison_test.go:613:    ✅ 步骤3: 切换到 StrategySkip 策略
    memory_persistence_comparison_test.go:616: ✅ Stream 预创建优化完成！耗时: 2.0368ms
    memory_persistence_comparison_test.go:617:    ℹ️  运行时将跳过所有 StreamInfo() RPC 调用，实现零开销发布
    memory_persistence_comparison_test.go:665: 📊 初始资源: Goroutines=279, Memory=8.66 MB
    memory_persistence_comparison_test.go:696: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:700: 📤 开始发送 5000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:752: ✅ 发送完成
    memory_persistence_comparison_test.go:755: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/5000 (0.0%)
    memory_persistence_comparison_test.go:763: ⚠️  接收超时
    memory_persistence_comparison_test.go:635: 📊 NATS 资源清理完成: 初始 279 -> 最终 289 (泄漏 10)
    memory_persistence_comparison_test.go:789: 
        ====================================================================================================
    memory_persistence_comparison_test.go:790: 📊 Kafka vs NATS JetStream 内存持久化性能对比报告 - High 压力
    memory_persistence_comparison_test.go:791: ====================================================================================================
    memory_persistence_comparison_test.go:794: 
        📋 基本信息:
    memory_persistence_comparison_test.go:795:   压力级别: High
    memory_persistence_comparison_test.go:796:   消息总数: 5000
    memory_persistence_comparison_test.go:797:   Topic 数量: 5
    memory_persistence_comparison_test.go:798:   Kafka 分区数: 3 (每个 topic)
    memory_persistence_comparison_test.go:802: 
        📊 Kafka 分区详情:
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:809: 
        📨 消息指标对比:
    memory_persistence_comparison_test.go:810:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:812:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:813:   发送消息数                | 5000            | 0               | -100.0%
    memory_persistence_comparison_test.go:816:   接收消息数                | 5000            | 1               | -100.0%
    memory_persistence_comparison_test.go:819:   发送错误数                | 0               | 5000            | -
    memory_persistence_comparison_test.go:821:   成功率                  | 100.00         % | 0.02           % | -100.0%
    memory_persistence_comparison_test.go:826: 
        ⚡ 性能指标对比:
    memory_persistence_comparison_test.go:827:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:828:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:829:   发送吞吐量 (msg/s)        | 4544.90         | 0.00            | -100.0%
    memory_persistence_comparison_test.go:832:   接收吞吐量 (msg/s)        | 4544.90         | 0.02            | -100.0%
    memory_persistence_comparison_test.go:835:   平均发送延迟 (ms)          | 0.046           | 0.000           | -100.0%
    memory_persistence_comparison_test.go:838:   平均处理延迟 (ms)          | 344.492         | -6322703526165.735 | -1835368866639.5%
    memory_persistence_comparison_test.go:841:   测试时长 (s)             | 1.10            | 60.09           | -
    memory_persistence_comparison_test.go:845: 
        💾 资源占用对比:
    memory_persistence_comparison_test.go:846:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:847:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:848:   初始协程数                | 329             | 279             | -50
    memory_persistence_comparison_test.go:851:   峰值协程数                | 467             | 294             | -173
    memory_persistence_comparison_test.go:854:   最终协程数                | 462             | 289             | -173
    memory_persistence_comparison_test.go:857:   协程泄漏数                | 133             | 10              | -
    memory_persistence_comparison_test.go:859:   初始内存 (MB)            | 9.01            | 8.66            | -0.35
    memory_persistence_comparison_test.go:862:   峰值内存 (MB)            | 14.54           | 15.04           | +0.50
    memory_persistence_comparison_test.go:865:   最终内存 (MB)            | 9.91            | 11.14           | +1.23
    memory_persistence_comparison_test.go:868:   内存增量 (MB)            | 0.90            | 2.48            | -
    memory_persistence_comparison_test.go:873: 
        🔗 连接和消费者组统计:
    memory_persistence_comparison_test.go:874:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:875:   -------------------------------------------------------
    memory_persistence_comparison_test.go:876:   连接数                  | 1               | 1              
    memory_persistence_comparison_test.go:878:   消费者组个数               | 1               | 1              
    memory_persistence_comparison_test.go:882: 
        ⚙️  Worker 池统计:
    memory_persistence_comparison_test.go:883:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:884:   -------------------------------------------------------
    memory_persistence_comparison_test.go:885:   使用全局 Worker 池        | true            | true           
    memory_persistence_comparison_test.go:887:   Worker 池大小           | 256             | 256            
    memory_persistence_comparison_test.go:891: 
        🎯 性能总结:
    memory_persistence_comparison_test.go:894:   ✅ Kafka 吞吐量领先 NATS 27308230.1%
    memory_persistence_comparison_test.go:905:   ✅ NATS 延迟优于 Kafka -100.0%
    memory_persistence_comparison_test.go:910:   ✅ Kafka 内存占用少于 NATS 1.58 MB
    memory_persistence_comparison_test.go:916: ====================================================================================================
    memory_persistence_comparison_test.go:946: 
        ====================================================================================================
    memory_persistence_comparison_test.go:947: 🚀 开始测试场景: Extreme 压力 (10000 消息, 5 topics)
    memory_persistence_comparison_test.go:948: ====================================================================================================
    memory_persistence_comparison_test.go:285: 
        ================================================================================
    memory_persistence_comparison_test.go:286: 🔵 测试 Kafka - Extreme 压力 (10000 消息, 5 topics)
    memory_persistence_comparison_test.go:287: ================================================================================
    memory_persistence_comparison_test.go:91: 🧹 清理 Kafka 测试数据 (topic prefix: test.memory.kafka)...
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic5
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic2
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic1
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic3
    memory_persistence_comparison_test.go:122:    ✅ 已删除 topic: test.memory.kafka.topic4
    memory_persistence_comparison_test.go:125: ✅ 成功删除 5 个 Kafka topics
    memory_persistence_comparison_test.go:171: 🔧 创建 Kafka Topics (3 分区)...
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic1 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic2 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic3 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic4 (3 partitions)
    memory_persistence_comparison_test.go:205:    ✅ 创建成功: test.memory.kafka.topic5 (3 partitions)
    memory_persistence_comparison_test.go:212: 📊 验证创建的 Topics:
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:222:    test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:228: ✅ 成功创建 5 个 Kafka topics
    memory_persistence_comparison_test.go:385: 📊 初始资源: Goroutines=336, Memory=11.21 MB
    memory_persistence_comparison_test.go:394: ✅ 已设置预订阅 topic 列表: [test.memory.kafka.topic1 test.memory.kafka.topic2 test.memory.kafka.topic3 test.memory.kafka.topic4 test.memory.kafka.topic5]
    memory_persistence_comparison_test.go:426: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:430: 📤 开始发送 10000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:482: ✅ 发送完成
    memory_persistence_comparison_test.go:485: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:498: ✅ 接收完成: 10000/10000
    memory_persistence_comparison_test.go:373: 📊 Kafka 资源清理完成: 初始 336 -> 最终 469 (泄漏 133)
    memory_persistence_comparison_test.go:519: 
        ================================================================================
    memory_persistence_comparison_test.go:520: 🟢 测试 NATS - Extreme 压力 (10000 消息, 5 topics)
    memory_persistence_comparison_test.go:521: ================================================================================
    memory_persistence_comparison_test.go:133: 🧹 清理 NATS 测试数据 (stream prefix: TEST_MEMORY_NATS)...
    memory_persistence_comparison_test.go:156:    ✅ 已删除 stream: TEST_MEMORY_NATS
    memory_persistence_comparison_test.go:163: ✅ 成功删除 1 个 NATS streams
    memory_persistence_comparison_test.go:591: 🚀 开始 Stream 预创建优化...
    memory_persistence_comparison_test.go:598:    ✅ 步骤1: 设置配置策略为 StrategyCreateOnly
    memory_persistence_comparison_test.go:608:    ✅ 步骤2: Stream 已创建（通过发布测试消息）
    memory_persistence_comparison_test.go:613:    ✅ 步骤3: 切换到 StrategySkip 策略
    memory_persistence_comparison_test.go:616: ✅ Stream 预创建优化完成！耗时: 2.1535ms
    memory_persistence_comparison_test.go:617:    ℹ️  运行时将跳过所有 StreamInfo() RPC 调用，实现零开销发布
    memory_persistence_comparison_test.go:665: 📊 初始资源: Goroutines=286, Memory=10.86 MB
    memory_persistence_comparison_test.go:696: ⏳ 等待订阅就绪...
    memory_persistence_comparison_test.go:700: 📤 开始发送 10000 条消息到 5 个 topics...
    memory_persistence_comparison_test.go:752: ✅ 发送完成
    memory_persistence_comparison_test.go:755: ⏳ 等待接收完成...
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:771:    接收进度: 1/10000 (0.0%)
    memory_persistence_comparison_test.go:763: ⚠️  接收超时
    memory_persistence_comparison_test.go:635: 📊 NATS 资源清理完成: 初始 286 -> 最终 296 (泄漏 10)
    memory_persistence_comparison_test.go:789: 
        ====================================================================================================
    memory_persistence_comparison_test.go:790: 📊 Kafka vs NATS JetStream 内存持久化性能对比报告 - Extreme 压力
    memory_persistence_comparison_test.go:791: ====================================================================================================
    memory_persistence_comparison_test.go:794: 
        📋 基本信息:
    memory_persistence_comparison_test.go:795:   压力级别: Extreme
    memory_persistence_comparison_test.go:796:   消息总数: 10000
    memory_persistence_comparison_test.go:797:   Topic 数量: 5
    memory_persistence_comparison_test.go:798:   Kafka 分区数: 3 (每个 topic)
    memory_persistence_comparison_test.go:802: 
        📊 Kafka 分区详情:
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic1: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic2: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic3: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic4: 3 partitions
    memory_persistence_comparison_test.go:804:   test.memory.kafka.topic5: 3 partitions
    memory_persistence_comparison_test.go:809: 
        📨 消息指标对比:
    memory_persistence_comparison_test.go:810:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:812:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:813:   发送消息数                | 10000           | 0               | -100.0%
    memory_persistence_comparison_test.go:816:   接收消息数                | 10000           | 1               | -100.0%
    memory_persistence_comparison_test.go:819:   发送错误数                | 0               | 10000           | -
    memory_persistence_comparison_test.go:821:   成功率                  | 100.00         % | 0.01           % | -100.0%
    memory_persistence_comparison_test.go:826: 
        ⚡ 性能指标对比:
    memory_persistence_comparison_test.go:827:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:828:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:829:   发送吞吐量 (msg/s)        | 8188.76         | 0.00            | -100.0%
    memory_persistence_comparison_test.go:832:   接收吞吐量 (msg/s)        | 8188.76         | 0.02            | -100.0%
    memory_persistence_comparison_test.go:835:   平均发送延迟 (ms)          | 0.048           | 0.000           | -100.0%
    memory_persistence_comparison_test.go:838:   平均处理延迟 (ms)          | 347.986         | -6322703427914.780 | -1816943574718.4%
    memory_persistence_comparison_test.go:841:   测试时长 (s)             | 1.22            | 60.18           | -
    memory_persistence_comparison_test.go:845: 
        💾 资源占用对比:
    memory_persistence_comparison_test.go:846:   指标                   | Kafka           | NATS            | 差异             
    memory_persistence_comparison_test.go:847:   ----------------------------------------------------------------------
    memory_persistence_comparison_test.go:848:   初始协程数                | 336             | 286             | -50
    memory_persistence_comparison_test.go:851:   峰值协程数                | 474             | 302             | -172
    memory_persistence_comparison_test.go:854:   最终协程数                | 469             | 296             | -173
    memory_persistence_comparison_test.go:857:   协程泄漏数                | 133             | 10              | -
    memory_persistence_comparison_test.go:859:   初始内存 (MB)            | 11.21           | 10.86           | -0.34
    memory_persistence_comparison_test.go:862:   峰值内存 (MB)            | 18.49           | 19.09           | +0.61
    memory_persistence_comparison_test.go:865:   最终内存 (MB)            | 12.11           | 13.31           | +1.19
    memory_persistence_comparison_test.go:868:   内存增量 (MB)            | 0.91            | 2.44            | -
    memory_persistence_comparison_test.go:873: 
        🔗 连接和消费者组统计:
    memory_persistence_comparison_test.go:874:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:875:   -------------------------------------------------------
    memory_persistence_comparison_test.go:876:   连接数                  | 1               | 1              
    memory_persistence_comparison_test.go:878:   消费者组个数               | 1               | 1              
    memory_persistence_comparison_test.go:882: 
        ⚙️  Worker 池统计:
    memory_persistence_comparison_test.go:883:   指标                   | Kafka           | NATS           
    memory_persistence_comparison_test.go:884:   -------------------------------------------------------
    memory_persistence_comparison_test.go:885:   使用全局 Worker 池        | true            | true           
    memory_persistence_comparison_test.go:887:   Worker 池大小           | 256             | 256            
    memory_persistence_comparison_test.go:891: 
        🎯 性能总结:
    memory_persistence_comparison_test.go:894:   ✅ Kafka 吞吐量领先 NATS 49276562.1%
    memory_persistence_comparison_test.go:905:   ✅ NATS 延迟优于 Kafka -100.0%
    memory_persistence_comparison_test.go:910:   ✅ Kafka 内存占用少于 NATS 1.54 MB
    memory_persistence_comparison_test.go:916: ====================================================================================================
    memory_persistence_comparison_test.go:972: 
        ====================================================================================================
    memory_persistence_comparison_test.go:973: 📊 所有场景汇总报告
    memory_persistence_comparison_test.go:974: ====================================================================================================
    memory_persistence_comparison_test.go:976: 
        场景         | 系统              | 吞吐量(msg/s)      | 延迟(ms)          | 成功率(%)          | 内存增量(MB)       
    memory_persistence_comparison_test.go:979: ----------------------------------------------------------------------------------------------------
    memory_persistence_comparison_test.go:983: Low        | Kafka           | 494.62          | 125.151         | 100.00          | 0.97           
    memory_persistence_comparison_test.go:989:            | NATS            | 0.02            | -6322703722019.797 | 0.20            | 2.50           
    memory_persistence_comparison_test.go:995: ----------------------------------------------------------------------------------------------------
    memory_persistence_comparison_test.go:983: Medium     | Kafka           | 1925.42         | 269.895         | 100.00          | 0.92           
    memory_persistence_comparison_test.go:989:            | NATS            | 0.02            | -6322703624214.025 | 0.05            | 2.49           
    memory_persistence_comparison_test.go:995: ----------------------------------------------------------------------------------------------------
    memory_persistence_comparison_test.go:983: High       | Kafka           | 4544.90         | 344.492         | 100.00          | 0.90           
    memory_persistence_comparison_test.go:989:            | NATS            | 0.02            | -6322703526165.735 | 0.02            | 2.48           
    memory_persistence_comparison_test.go:995: ----------------------------------------------------------------------------------------------------
    memory_persistence_comparison_test.go:983: Extreme    | Kafka           | 8188.76         | 347.986         | 100.00          | 0.91           
    memory_persistence_comparison_test.go:989:            | NATS            | 0.02            | -6322703427914.780 | 0.01            | 2.44           
    memory_persistence_comparison_test.go:995: ----------------------------------------------------------------------------------------------------
    memory_persistence_comparison_test.go:999: 
        🔍 关键发现:
    memory_persistence_comparison_test.go:1000:   1. ✅ 所有测试使用 Publish/Subscribe 方法（无聚合ID）
    memory_persistence_comparison_test.go:1001:   2. ✅ Kafka 和 NATS 都使用内存持久化
    memory_persistence_comparison_test.go:1002:   3. ✅ Kafka 使用 3 分区配置
    memory_persistence_comparison_test.go:1003:   4. ✅ 两个系统都使用全局 Worker 池处理订阅消息
    memory_persistence_comparison_test.go:1004:   5. ✅ Topic 数量: 5
    memory_persistence_comparison_test.go:1005:   6. ✅ 测试前已清理 Kafka 和 NATS 数据
    memory_persistence_comparison_test.go:1007: 
        ✅ 所有测试完成！
    memory_persistence_comparison_test.go:1008: ====================================================================================================
--- PASS: TestMemoryPersistenceComparison (392.21s)
PASS
ok  	github.com/ChenBigdata421/jxt-core/tests/eventbus/performance_tests	392.672s
