=== RUN   TestKafkaSubscriberBacklogMonitoring
    backlog_test.go:43: ✅ Kafka subscriber backlog monitoring test passed (callback called: false)
--- PASS: TestKafkaSubscriberBacklogMonitoring (4.03s)
=== RUN   TestNATSSubscriberBacklogMonitoring
    backlog_test.go:78: ✅ NATS subscriber backlog monitoring test passed (callback called: false)
--- PASS: TestNATSSubscriberBacklogMonitoring (4.01s)
=== RUN   TestKafkaPublisherBacklogMonitoring
    backlog_test.go:112: ✅ Kafka publisher backlog monitoring test passed (callback called: false)
--- PASS: TestKafkaPublisherBacklogMonitoring (4.01s)
=== RUN   TestNATSPublisherBacklogMonitoring
    backlog_test.go:147: ✅ NATS publisher backlog monitoring test passed (callback called: false)
--- PASS: TestNATSPublisherBacklogMonitoring (4.01s)
=== RUN   TestKafkaStartAllBacklogMonitoring
    backlog_test.go:188: ✅ Kafka StartAllBacklogMonitoring test passed (sub: false, pub: false)
--- PASS: TestKafkaStartAllBacklogMonitoring (4.01s)
=== RUN   TestNATSStartAllBacklogMonitoring
    backlog_test.go:231: ✅ NATS StartAllBacklogMonitoring test passed (sub: false, pub: false)
--- PASS: TestNATSStartAllBacklogMonitoring (4.01s)
=== RUN   TestKafkaSetMessageRouter
    backlog_test.go:250: ✅ Kafka SetMessageRouter test passed
--- PASS: TestKafkaSetMessageRouter (1.01s)
=== RUN   TestNATSSetMessageRouter
    backlog_test.go:269: ✅ NATS SetMessageRouter test passed
--- PASS: TestNATSSetMessageRouter (1.01s)
=== RUN   TestKafkaSetErrorHandler
    backlog_test.go:297: ✅ Kafka SetErrorHandler test passed
--- PASS: TestKafkaSetErrorHandler (1.01s)
=== RUN   TestKafkaBasicPublishSubscribe
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.basic.1760427178607
    basic_test.go:34: 📨 Received message: Hello Kafka!
    basic_test.go:53: ✅ Kafka basic publish/subscribe test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.basic.1760427178607
--- PASS: TestKafkaBasicPublishSubscribe (10.50s)
=== RUN   TestNATSBasicPublishSubscribe
    basic_test.go:80: 📨 Received message: Hello NATS!
    basic_test.go:99: ✅ NATS basic publish/subscribe test passed
--- PASS: TestNATSBasicPublishSubscribe (4.12s)
=== RUN   TestKafkaMultipleMessages
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.multiple.1760427193225
    basic_test.go:137: ✅ Kafka multiple messages test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.multiple.1760427193225
--- PASS: TestKafkaMultipleMessages (10.59s)
=== RUN   TestNATSMultipleMessages
    basic_test.go:176: ✅ NATS multiple messages test passed
--- PASS: TestNATSMultipleMessages (4.12s)
=== RUN   TestKafkaPublishWithOptions
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.options.1760427207930
    basic_test.go:215: ✅ Kafka PublishWithOptions test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.options.1760427207930
--- PASS: TestKafkaPublishWithOptions (10.37s)
=== RUN   TestNATSPublishWithOptions
    basic_test.go:255: ✅ NATS PublishWithOptions test passed
--- PASS: TestNATSPublishWithOptions (4.12s)
=== RUN   TestKafkaEnvelopePublishSubscribe
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.envelope.1760427222415
    envelope_test.go:33: 📨 Received envelope: AggregateID=test-aggregate-1, EventType=TestEvent, Version=1
    envelope_test.go:61: ✅ Kafka Envelope publish/subscribe test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.envelope.1760427222415
--- PASS: TestKafkaEnvelopePublishSubscribe (10.49s)
=== RUN   TestNATSEnvelopePublishSubscribe
    envelope_test.go:84: 📨 Received envelope: AggregateID=test-aggregate-1, EventType=TestEvent, Version=1
    envelope_test.go:112: ✅ NATS Envelope publish/subscribe test passed
--- PASS: TestNATSEnvelopePublishSubscribe (4.12s)
=== RUN   TestKafkaEnvelopeOrdering
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.envelope.order.1760427237021
    envelope_test.go:177: ✅ Kafka Envelope ordering test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.envelope.order.1760427237021
--- PASS: TestKafkaEnvelopeOrdering (10.39s)
=== RUN   TestNATSEnvelopeOrdering
    envelope_test.go:243: ✅ NATS Envelope ordering test passed
--- PASS: TestNATSEnvelopeOrdering (4.11s)
=== RUN   TestKafkaMultipleAggregates
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.multi.agg.1760427251522
    envelope_test.go:293: ✅ Kafka multiple aggregates test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.multi.agg.1760427251522
--- PASS: TestKafkaMultipleAggregates (10.36s)
=== RUN   TestKafkaHealthCheckPublisher
    healthcheck_test.go:32: 📊 Health check publisher status: {IsHealthy:true ConsecutiveFailures:0 LastSuccessTime:2025-10-14 15:34:21.8932217 +0800 CST m=+110.393060901 LastFailureTime:0001-01-01 00:00:00 +0000 UTC IsRunning:true EventBusType:kafka Source:kafka-eventbus}
    healthcheck_test.go:38: ✅ Kafka health check publisher test passed
--- PASS: TestKafkaHealthCheckPublisher (4.01s)
=== RUN   TestNATSHealthCheckPublisher
    healthcheck_test.go:61: 📊 Health check publisher status: {IsHealthy:true ConsecutiveFailures:0 LastSuccessTime:2025-10-14 15:34:25.8992201 +0800 CST m=+114.399059301 LastFailureTime:0001-01-01 00:00:00 +0000 UTC IsRunning:true EventBusType:nats Source:nats-eventbus}
    healthcheck_test.go:67: ✅ NATS health check publisher test passed
--- PASS: TestNATSHealthCheckPublisher (4.01s)
=== RUN   TestKafkaHealthCheckSubscriber
    healthcheck_test.go:89: 📊 Health check subscriber stats: {StartTime:2025-10-14 15:34:29.9114035 +0800 CST m=+118.411242701 LastMessageTime:2025-10-14 15:34:30.1274255 +0800 CST m=+118.627264701 TotalMessagesReceived:1 ConsecutiveMisses:0 TotalAlerts:0 LastAlertTime:0001-01-01 00:00:00 +0000 UTC IsHealthy:true UptimeSeconds:6.0007411}
    healthcheck_test.go:95: ✅ Kafka health check subscriber test passed
--- PASS: TestKafkaHealthCheckSubscriber (7.08s)
=== RUN   TestNATSHealthCheckSubscriber
    healthcheck_test.go:118: 📊 Health check subscriber stats: {StartTime:2025-10-14 15:34:36.9940901 +0800 CST m=+125.493929301 LastMessageTime:0001-01-01 00:00:00 +0000 UTC TotalMessagesReceived:0 ConsecutiveMisses:0 TotalAlerts:0 LastAlertTime:0001-01-01 00:00:00 +0000 UTC IsHealthy:false UptimeSeconds:3.0002376}
    healthcheck_test.go:124: ✅ NATS health check subscriber test passed
--- PASS: TestNATSHealthCheckSubscriber (4.01s)
=== RUN   TestKafkaStartAllHealthCheck
    healthcheck_test.go:147: 📊 Publisher status: {IsHealthy:true ConsecutiveFailures:0 LastSuccessTime:2025-10-14 15:34:41.0019076 +0800 CST m=+129.501746801 LastFailureTime:0001-01-01 00:00:00 +0000 UTC IsRunning:true EventBusType:kafka Source:kafka-eventbus}
    healthcheck_test.go:148: 📊 Subscriber stats: {StartTime:2025-10-14 15:34:41.0019076 +0800 CST m=+129.501746801 LastMessageTime:2025-10-14 15:34:41.2168296 +0800 CST m=+129.716668801 TotalMessagesReceived:2 ConsecutiveMisses:0 TotalAlerts:0 LastAlertTime:0001-01-01 00:00:00 +0000 UTC IsHealthy:true UptimeSeconds:6.0002645}
    healthcheck_test.go:154: ✅ Kafka StartAllHealthCheck test passed
--- PASS: TestKafkaStartAllHealthCheck (7.06s)
=== RUN   TestNATSStartAllHealthCheck
    healthcheck_test.go:178: 📊 Publisher status: {IsHealthy:true ConsecutiveFailures:0 LastSuccessTime:2025-10-14 15:34:48.0632591 +0800 CST m=+136.563098301 LastFailureTime:0001-01-01 00:00:00 +0000 UTC IsRunning:true EventBusType:nats Source:nats-eventbus}
    healthcheck_test.go:179: 📊 Subscriber stats: {StartTime:2025-10-14 15:34:48.0632591 +0800 CST m=+136.563098301 LastMessageTime:2025-10-14 15:34:48.1074885 +0800 CST m=+136.607327701 TotalMessagesReceived:1 ConsecutiveMisses:0 TotalAlerts:0 LastAlertTime:0001-01-01 00:00:00 +0000 UTC IsHealthy:true UptimeSeconds:3.0001772}
    healthcheck_test.go:185: ✅ NATS StartAllHealthCheck test passed
--- PASS: TestNATSStartAllHealthCheck (4.01s)
=== RUN   TestKafkaHealthCheckPublisherCallback
    healthcheck_test.go:206: 📞 Health check publisher callback called: {Success:true Timestamp:2025-10-14 15:34:52.0713565 +0800 CST m=+140.571195701 Duration:0s Error:<nil> ConsecutiveFailures:0 EventBusType:kafka Source:kafka-eventbus}
    healthcheck_test.go:218: ✅ Kafka health check publisher callback test passed (callback called: true)
--- PASS: TestKafkaHealthCheckPublisherCallback (4.01s)
=== RUN   TestNATSHealthCheckPublisherCallback
    healthcheck_test.go:240: 📞 Health check publisher callback called: {Success:true Timestamp:2025-10-14 15:34:56.0811508 +0800 CST m=+144.580990001 Duration:0s Error:<nil> ConsecutiveFailures:0 EventBusType:nats Source:nats-eventbus}
    healthcheck_test.go:252: ✅ NATS health check publisher callback test passed (callback called: true)
--- PASS: TestNATSHealthCheckPublisherCallback (4.01s)
=== RUN   TestKafkaHealthCheckSubscriberCallback
    healthcheck_test.go:285: ✅ Kafka health check subscriber callback test passed (callback called: false)
--- PASS: TestKafkaHealthCheckSubscriberCallback (10.06s)
=== RUN   TestKafkaHealthCheckPublisherSubscriberIntegration
    healthcheck_test.go:332: 🚀 A 端：启动健康检查发布器（间隔：10秒）
    healthcheck_test.go:337: 🚀 B 端：启动健康检查订阅器
    healthcheck_test.go:343: ⏳ 等待健康检查消息发送和接收（1分钟）...
    healthcheck_test.go:344: ✅ EventBus 现在使用自定义健康检查配置（间隔：10秒）
    healthcheck_test.go:349: 📊 A 端发布器状态: IsHealthy=true, ConsecutiveFailures=0, LastSuccessTime=2025-10-14 15:36:10.152767 +0800 CST m=+218.652606201
    healthcheck_test.go:371: 📊 B 端订阅器统计: TotalMessagesReceived=10, ConsecutiveMisses=0, IsHealthy=true, LastMessageTime=2025-10-14 15:36:10.2538842 +0800 CST m=+218.753723401
    healthcheck_test.go:392: ⚠️  B 端订阅器在 1 分钟内接收到 10 条消息，超过预期的 8 条
    healthcheck_test.go:403: 🛑 停止 A 端健康检查发布器
    healthcheck_test.go:408: 🛑 停止 B 端健康检查订阅器
    healthcheck_test.go:412: ✅ Kafka 健康检查发布端和订阅端集成测试通过
    healthcheck_test.go:413:    - A 端成功发送健康检查消息（自定义间隔：10秒）
    healthcheck_test.go:414:    - B 端成功接收 10 条健康检查消息（测试时长：1分钟）
--- PASS: TestKafkaHealthCheckPublisherSubscriberIntegration (65.10s)
=== RUN   TestNATSHealthCheckPublisherSubscriberIntegration
    healthcheck_test.go:460: 🚀 B 端：先启动健康检查订阅器（NATS Core 需要先订阅）
    healthcheck_test.go:468: 🚀 A 端：再启动健康检查发布器
    healthcheck_test.go:474: ⏳ 等待健康检查消息发送和接收（1分钟）...
    healthcheck_test.go:475: ✅ EventBus 现在使用自定义健康检查配置（间隔：10秒）
    healthcheck_test.go:480: 📊 A 端发布器状态: IsHealthy=true, ConsecutiveFailures=0, LastSuccessTime=2025-10-14 15:37:06.2536565 +0800 CST m=+274.753495701
    healthcheck_test.go:502: 📊 B 端订阅器统计: TotalMessagesReceived=6, ConsecutiveMisses=0, IsHealthy=true, LastMessageTime=2025-10-14 15:37:06.2559794 +0800 CST m=+274.755818601
    healthcheck_test.go:525: ✅ B 端订阅器在 1 分钟内接收到 6 条消息，符合预期（5-8 条）
    healthcheck_test.go:534: 🛑 停止 A 端健康检查发布器
    healthcheck_test.go:539: 🛑 停止 B 端健康检查订阅器
    healthcheck_test.go:543: ✅ NATS 健康检查发布端和订阅端集成测试通过
    healthcheck_test.go:544:    - A 端成功发送健康检查消息（自定义间隔：10秒）
    healthcheck_test.go:545:    - B 端成功接收 6 条健康检查消息（测试时长：1分钟）
--- PASS: TestNATSHealthCheckPublisherSubscriberIntegration (63.02s)
=== RUN   TestKafkaStartStop
    lifecycle_test.go:31: ✅ Kafka Start/Stop test passed
--- PASS: TestKafkaStartStop (2.01s)
=== RUN   TestNATSStartStop
    lifecycle_test.go:56: ✅ NATS Start/Stop test passed
--- PASS: TestNATSStartStop (2.01s)
=== RUN   TestKafkaGetConnectionState
    lifecycle_test.go:69: 📊 Connection state: {IsConnected:true LastConnectedTime:2025-10-14 15:37:22.2820544 +0800 CST m=+290.781893601 ReconnectCount:0 LastError:}
    lifecycle_test.go:74: ✅ Kafka GetConnectionState test passed
--- PASS: TestKafkaGetConnectionState (1.01s)
=== RUN   TestNATSGetConnectionState
    lifecycle_test.go:88: 📊 Connection state: {IsConnected:true LastConnectedTime:2025-10-14 15:37:23.2937562 +0800 CST m=+291.793595401 ReconnectCount:0 LastError:}
    lifecycle_test.go:93: ✅ NATS GetConnectionState test passed
--- PASS: TestNATSGetConnectionState (1.01s)
=== RUN   TestKafkaGetMetrics
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.metrics.1760427444294
    lifecycle_test.go:121: 📊 Metrics: {MessagesPublished:5 MessagesConsumed:0 PublishErrors:0 ConsumeErrors:0 ConnectionErrors:0 LastHealthCheck:2025-10-14 15:37:28.5236263 +0800 CST m=+297.023465501 HealthCheckStatus:healthy ActiveConnections:1 MessageBacklog:0}
    lifecycle_test.go:126: ✅ Kafka GetMetrics test passed
    test_helper.go:201: ✅ Deleted Kafka topic: test.kafka.metrics.1760427444294
--- PASS: TestKafkaGetMetrics (7.24s)
=== RUN   TestNATSGetMetrics
    lifecycle_test.go:155: 📊 Metrics: {MessagesPublished:5 MessagesConsumed:0 PublishErrors:0 ConsumeErrors:0 ConnectionErrors:0 LastHealthCheck:2025-10-14 15:37:33.5383173 +0800 CST m=+302.038156501 HealthCheckStatus:healthy ActiveConnections:1 MessageBacklog:0}
    lifecycle_test.go:160: ✅ NATS GetMetrics test passed
--- PASS: TestNATSGetMetrics (4.02s)
=== RUN   TestKafkaReconnectCallback
    lifecycle_test.go:181: ✅ Kafka RegisterReconnectCallback test passed (callback registered: true)
--- PASS: TestKafkaReconnectCallback (1.01s)
=== RUN   TestNATSReconnectCallback
    lifecycle_test.go:203: ✅ NATS RegisterReconnectCallback test passed (callback registered: true)
--- PASS: TestNATSReconnectCallback (1.01s)
=== RUN   TestKafkaClose
    lifecycle_test.go:223: ✅ Kafka Close test passed
--- PASS: TestKafkaClose (0.01s)
=== RUN   TestNATSClose
    lifecycle_test.go:244: ✅ NATS Close test passed
--- PASS: TestNATSClose (0.01s)
=== RUN   TestKafkaPublishCallback
    test_helper.go:318: ✅ Created Kafka topic: test.kafka.pub.callback.1760427457573
    lifecycle_test.go:262: 📞 Publish callback called: Topic=test.kafka.pub.callback.1760427457573, Error=<nil>
