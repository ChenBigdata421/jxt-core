=== RUN   TestKafkaHealthCheckPublisherSubscriberIntegration
    healthcheck_test.go:305: 🚀 A 端：启动健康检查发布器
    healthcheck_test.go:310: 🚀 B 端：启动健康检查订阅器
    healthcheck_test.go:316: ⏳ 等待健康检查消息发送和接收（5秒）...
    healthcheck_test.go:321: 📊 A 端发布器状态: IsHealthy=true, ConsecutiveFailures=0, LastSuccessTime=2025-10-14 14:32:29.2280176 +0800 CST m=+0.042401401
    healthcheck_test.go:343: 📊 B 端订阅器统计: TotalMessagesReceived=1, ConsecutiveMisses=0, IsHealthy=true, LastMessageTime=2025-10-14 14:32:29.4435849 +0800 CST m=+0.257968701
    healthcheck_test.go:361: ⚠️  B 端订阅器在 5 秒内只接收到 1 条消息，预期至少 3 条
    healthcheck_test.go:372: 🛑 停止 A 端健康检查发布器
    healthcheck_test.go:377: 🛑 停止 B 端健康检查订阅器
    healthcheck_test.go:381: ✅ Kafka 健康检查发布端和订阅端集成测试通过
    healthcheck_test.go:382:    - A 端成功发送健康检查消息
    healthcheck_test.go:383:    - B 端成功接收 1 条健康检查消息
--- PASS: TestKafkaHealthCheckPublisherSubscriberIntegration (10.05s)
=== RUN   TestNATSHealthCheckPublisherSubscriberIntegration
    healthcheck_test.go:406: 🚀 A 端：启动健康检查发布器
    healthcheck_test.go:411: 🚀 B 端：启动健康检查订阅器
    healthcheck_test.go:417: ⏳ 等待健康检查消息发送和接收（5秒）...
    healthcheck_test.go:422: 📊 A 端发布器状态: IsHealthy=true, ConsecutiveFailures=0, LastSuccessTime=2025-10-14 14:32:39.2640812 +0800 CST m=+10.078465001
    healthcheck_test.go:444: 📊 B 端订阅器统计: TotalMessagesReceived=1, ConsecutiveMisses=0, IsHealthy=true, LastMessageTime=2025-10-14 14:32:39.2651678 +0800 CST m=+10.079551601
    healthcheck_test.go:462: ⚠️  B 端订阅器在 5 秒内只接收到 1 条消息，预期至少 3 条
    healthcheck_test.go:473: 🛑 停止 A 端健康检查发布器
    healthcheck_test.go:478: 🛑 停止 B 端健康检查订阅器
    healthcheck_test.go:482: ✅ NATS 健康检查发布端和订阅端集成测试通过
    healthcheck_test.go:483:    - A 端成功发送健康检查消息
    healthcheck_test.go:484:    - B 端成功接收 1 条健康检查消息
--- PASS: TestNATSHealthCheckPublisherSubscriberIntegration (7.02s)
PASS
ok  	github.com/ChenBigdata421/jxt-core/tests/eventbus/function_tests	17.628s
